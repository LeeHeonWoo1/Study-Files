// 단항, 이항, 피연산자
// 기본적으로 연산은 왼쪽에서 오른쪽으로 수행된다.
// 피연산자는 연산자가 연산을 수행하는 대상이다. 5*2 에서 *는 연산자, 5와 2는 피연산자 이다. 피연산자는 '인수'라는 용어로 불리기도 한다.
// 피연산자를 하나만 받는 연산자는 단항 연산자라고 부른다. 가령 피연산자의 부호를 뒤집는 단항 마이너스 연산자가 그 대표적 예이다.
let x = 1;
x = -x;
alert(x);

// 두 개의 피연산자를 받는 연산자는 이항 연산자라고 부른다. 마이너스 연산자는 아래와 같이 이항연산자로 쓸 수도 있다.
let X = 1, y = 3;
alert(y-X); 

// 연산자에는 +, -, *, /, %, **가 있다.
// 또한 이항연산 시 +를 사용한다고 가정하면, 피연산자 중 하나가 문자열이면 다른 하나도 문자열로 자동 변환된다.
alert(1 + '2') // 12가 출력된다.
alert(2+2+'1') // 221이 아닌 41이 출력된다.(기본적인 연산은 왼쪽에서 오른쪽으로 수행하기 때문)

// -를 사용할때는 +연산자를 사용할때와는 다른 결과를 표출한다
alert(6-'2'); // '2'를 숫자로 바꾼 후 연산이 진행된다
alert('6'/'2'); // 두 피연산자가 숫자로 바뀐 후에 연산이 진행된다

// 양의 숫자를 가진 변수에 -를 붙이면 음의 숫자로 변경되는 모습을 볼 수 있었지만, 음의 숫자에 +를 붙인다고 해서 부호가 바뀌진 않는다.
let z = -1;
alert(z);
z = +z;
alert(z)

// 숫자형이 아닌 피연산자에 +를 붙이면 숫자형으로 변화한다
alert(+true); // 1을 반환
alert(+''); // 0을 반환

// 다음과 같은 경우에 사용할 수 있다.
let apples = '2';
let bananas = '3';
alert(apples+bananas); // 23이 반환된다
alert(+apples + +bananas); // 각 변수들을 Number함수를 이용해 숫자로 바꿔줘도 되지만, 코드가 길어진다.

